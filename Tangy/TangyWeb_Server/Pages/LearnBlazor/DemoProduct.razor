@page "/learnblazor/demoproduct"
<h2 class="text-primary">DemoProduct</h2>
<p> Favorited count - @FavoritedCount</p>
<p> Selected product - @SelectedProduct</p>
@*todo - favorited count and last selected product*@

<div class="border p-2 mt-2" style="background-color:azure">
	<div class="row p-1">
		@foreach (var prod in Products)
		{
			<_IndividualProduct Product="@prod" OnUpdateFavoritedCount="UpdateFavoritedCount" OnUpdateSelectedProduct="UpdateSelectedProduct">
				<ChildContent>Child #1</ChildContent>
				<ChildContentTwo>Child #2</ChildContentTwo>
			</_IndividualProduct>
		}
	</div>
</div>


@code {

	private int FavoritedCount { get; set; } = 0;

	private string SelectedProduct { get; set; } = String.Empty;



	List<Demo_Product> Products = new();

	protected override void OnInitialized()
	{
		Products.Add(new()
			{
				Id = 1,
				Name = "Midnight Blaze",
				IsActive = false,
				Price = 1110.99,
				ProductProperties = new()
				{
				new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
					 new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
					new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
				}
			});

		Products.Add(new()
			{
				Id = 2,
				Name = "Blossom Lily",
				IsActive = true,
				Price = 13.99,
				ProductProperties = new()
			{
				new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
				new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
				new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
			}
			});
	}

	protected void UpdateFavoritedCount(bool IsFavorited)
	{
		if (IsFavorited)
		{
			FavoritedCount++;
		}
		else
		{
			FavoritedCount--;
		}
	}

	protected void UpdateSelectedProduct(string ClickedProduct)
	{
		SelectedProduct = ClickedProduct;
	}


}
